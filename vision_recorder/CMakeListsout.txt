cmake_minimum_required(VERSION 2.8.3)
project(vision_recorder)
## Use c++ 11x std
set(CMAKE_CXX_FLAGS "-std=c++11 ${CMAKE_CXX_FLAGS}")
if (${CMAKE_EXTRA_GENERATOR} MATCHES "Eclipse CDT4")
	set(CMAKE_CXX_COMPILER_ARG1 "-std=c++11" CACHE STRING "C++ version for eclipse" FORCE)
	set(CMAKE_ECLIPSE_VERSION "4.5" CACHE STRING "Eclipse version" FORCE)
	add_definitions (-DCMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT=TRUE)
endif (${CMAKE_EXTRA_GENERATOR} MATCHES "Eclipse CDT4")

INCLUDE_DIRECTORIES("/usr/include/flycapture") ## TODO: write find module

find_package(catkin REQUIRED COMPONENTS system_config msl_ptgrey_camera)

## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if you package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
  INCLUDE_DIRS include
  LIBRARIES vision_recorder
  #CATKIN_DEPENDS system_config msl_ptgrey_camera flycapture 
  CATKIN_DEPENDS system_config msl_ptgrey_camera
)

include_directories(include ${catkin_INCLUDE_DIRS})

set(sources
		src/Recorder.cpp
)

add_executable(vision_recorder ${sources})

target_link_libraries(vision_recorder
  ${catkin_LIBRARIES}
  #flycapture
)

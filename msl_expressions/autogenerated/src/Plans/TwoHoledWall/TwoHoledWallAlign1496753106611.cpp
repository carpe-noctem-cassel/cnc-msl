#include "Plans/TwoHoledWall/TwoHoledWallAlign1496753106611.h"
using namespace alica;
/*PROTECTED REGION ID(eph1496753106611) ENABLED START*/ //Add additional using directives here
/*PROTECTED REGION END*/
namespace alicaAutogenerated
{
    //Plan:TwoHoledWallAlign

    /* generated comment
     
     Task: DefaultTask  -> EntryPoint-ID: 1496753106613

     */
    shared_ptr<UtilityFunction> UtilityFunction1496753106611::getUtilityFunction(Plan* plan)
    {
        /*PROTECTED REGION ID(1496753106611) ENABLED START*/

        shared_ptr < UtilityFunction > defaultFunction = make_shared < DefaultUtilityFunction > (plan);
        return defaultFunction;

        /*PROTECTED REGION END*/
    }

    //State: DriveToOrigin in Plan: TwoHoledWallAlign

    /*
     *		
     * Transition:
     *   - Name: MISSING_NAME, ConditionString: , Comment : anyChildSucces 
     *
     * Plans in State: 				
     *   - Plan - (Name): DriveToPointDefault, (PlanID): 1417620583364 
     *
     * Tasks: 
     *   - DefaultTask (1225112227903) (Entrypoint: 1496753106613)
     *
     * States:
     *   - DriveToOrigin (1496753106612)
     *   - Score (1496753202569)
     *
     * Vars:
     */
    bool TransitionCondition1496753238482::evaluate(shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(1496753237394) ENABLED START*/
        return rp->anyChildrenStatus(PlanStatus::Success);
        /*PROTECTED REGION END*/

    }

    //State: Score in Plan: TwoHoledWallAlign

    /*
     *		
     * Transition:
     *   - Name: MISSING_NAME, ConditionString: , Comment : anyChildSuccess 
     *
     * Plans in State: 				
     *   - Plan - (Name): ShootTwoHoledWall, (PlanID): 1417620189234 
     *
     * Tasks: 
     *   - DefaultTask (1225112227903) (Entrypoint: 1496753106613)
     *
     * States:
     *   - DriveToOrigin (1496753106612)
     *   - Score (1496753202569)
     *
     * Vars:
     */
    bool TransitionCondition1496753474941::evaluate(shared_ptr<RunningPlan> rp)
    {
        /*PROTECTED REGION ID(1496753473525) ENABLED START*/
        return rp->anyChildrenStatus(PlanStatus::Success);
        /*PROTECTED REGION END*/

    }

}

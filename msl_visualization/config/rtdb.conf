# Configuration file for RtDB items.
# - It is composed of 3 sections: agents, items, and schemas.
#   - The agents section is a comma-separated list of agent's ids.
#   - The items section is a list of items. 
#     - An item is composed of an id, a datatype, the headerfile where
#       the datatype is declared, and a period.
#     - The item format is described bellow.
#   - The schema section is a newline- or semicolon-separated list of schemas. 
#     - A schema is an arrangement of items, 
#       each one labelled as either shared or local.
#     - A schema must also be assigned to 1 or more agents.
#     - The schema formar is described bellow.
# - Everything from # to end of line is discarded.
# - Empty lines are also discarded.
# - In the comments bellow square brackets define an optional component.

# Agent declaration section
#   it is a comma-separated list of agent's ids
# 
# AGENTS = «id» [, «id» , ...] [;]
#
AGENTS = BASE_STATION, CAMBADA_1, CAMBADA_2, CAMBADA_3, CAMBADA_4, CAMBADA_5, CAMBADA_6;

# Item declaration section
# 
# ITEM «id» { datatype = «id»; [headerfile = «filename»]; 
#	[period = «number»]; }
# headerfile defaults to «datatype» plus ".h". For instance if datatype = abc,
#   then headerfile defaults to abc.h
# period defaults to 1
#
ITEM ROBOT_WS { datatype = Robot; headerfile = Robot.h; }

ITEM LAPTOP_INFO { datatype = LaptopInfo; headerfile = SystemInfo.h; }

ITEM COACH_INFO { datatype = CoachInfo; headerfile = CoachInfo.h; }

ITEM VISION_INFO { datatype = VisionInfo; headerfile = VisionInfo.h; }

ITEM FRONT_VISION_INFO { datatype = FrontVisionInfo; headerfile = VisionInfo.h; }

ITEM FORMATION_INFO { datatype = FormationInfo; headerfile = CoachInfo.h; }

ITEM CMD_VEL { datatype = CMD_Vel; headerfile = HWcomm_rtdb.h; }
ITEM CMD_POS { datatype = CMD_Pos; headerfile = HWcomm_rtdb.h; }
ITEM CMD_KICKER { datatype = CMD_Kicker; headerfile = HWcomm_rtdb.h; }
ITEM CMD_INFO { datatype = CMD_Info; headerfile = HWcomm_rtdb.h; }
ITEM CMD_HWERRORS { datatype = CMD_HWerrors; headerfile = HWcomm_rtdb.h; }
ITEM CMD_GRABBER { datatype = CMD_Grabber; headerfile = HWcomm_rtdb.h; }
ITEM LAST_CMD_VEL { datatype = CMD_Vel; headerfile = HWcomm_rtdb.h; }
ITEM REMOTE_CMD { datatype = RemoteCMD; headerfile = rtdb_remoteControl.h; }
ITEM CMD_IMU { datatype = CMD_Imu; headerfile = HWcomm_rtdb.h; }
ITEM CMD_SYNCIMU { datatype = int; headerfile = stdio.h; }
ITEM CMD_GRABBER_INFO { datatype = CMD_Grabber_Info; headerfile = HWcomm_rtdb.h; }
ITEM CMD_GRABBER_CONFIG { datatype = CMD_Grabber_Config; headerfile = HWcomm_rtdb.h; }

ITEM GRIDVIEW { datatype = GridView; headerfile = GridView.h; }
ITEM COACHLOGROBOTSINFO { datatype = CoachLogRobotsInfo; headerfile = CoachLogModeInfo.h; }
ITEM COACHLOGMODEFLAG { datatype = CoachLogModeFlag; headerfile = CoachLogModeInfo.h; }


# SCHEMA definition section
#
# SCHEMA «id» { [shared = «id» [ , «id», ...] ; ] 
#    [local = «id» [, «id», ...] ; ]
#
SCHEMA BaseStation
{
    shared = COACH_INFO, FORMATION_INFO;
    local = GRIDVIEW, COACHLOGROBOTSINFO, COACHLOGMODEFLAG;
}

SCHEMA Player
{
    shared = ROBOT_WS, LAPTOP_INFO;
    local = COACH_INFO, VISION_INFO, FRONT_VISION_INFO, CMD_VEL, CMD_POS, CMD_KICKER, CMD_INFO, CMD_HWERRORS, CMD_GRABBER, LAST_CMD_VEL, CMD_IMU, CMD_SYNCIMU, CMD_GRABBER_INFO, CMD_GRABBER_CONFIG; 
}

# ASSIGNMENT definition section
#
# ASSIGNMENT { schema = «id»; agents = «id», ... ; }
#
ASSIGNMENT { schema = BaseStation; agents = BASE_STATION; }
ASSIGNMENT { schema = Player;  agents = CAMBADA_1, CAMBADA_2, CAMBADA_3, CAMBADA_4, CAMBADA_5, CAMBADA_6; }

